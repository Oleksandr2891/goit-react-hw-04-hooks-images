{"version":3,"sources":["style/GlobalStyle.jsx","Components/ImageGallery/ImageGalleryItem/GalleryItemStyled.jsx","Components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","utils/Api.jsx","Components/Button/ButtonStyled.jsx","Components/Button/Button.jsx","Components/Modal/ModalStyled.jsx","Components/Loader/Loader.jsx","Components/Modal/Modal.jsx","Components/ImageGallery/ImageGalleryStyled.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Seachbar/SearchbarStyled.jsx","Components/Seachbar/Searchbar.jsx","App.js","index.js"],"names":["createGlobalStyle","GalleryItem","styled","li","ImageGalleryItem","webformatURL","largeImageURL","tag","openModalWithImage","src","alt","className","onClick","configUrl","getImages","nextName","page","axios","get","then","response","data","hits","catch","err","alert","ButtonLoader","div","Button","onHandleLoadMore","type","Overlay","LoaderSpiner","color","height","width","timeout","Modal","closeModal","children","useState","onLoadImage","setOnLoadImage","useEffect","window","addEventListener","handleEscape","document","querySelector","style","overflow","imageIsLoad","onload","showLoaderForSrc","removeEventListener","e","code","props","target","currentTarget","Loader","ImageGalleryList","ul","ImageGallery","nameSearch","setPage","imageData","setImageData","isModalOpen","setIsModalOpen","imagePath","setImagePath","getListImageGallery","a","Api","length","prevImageData","toast","success","error","scrollTo","top","documentElement","scrollHeight","behavior","path","map","id","prevPage","SearchbarWrapper","header","Searchbar","onSubmit","imageNameSearch","setImageNameSearch","event","preventDefault","trim","warn","autoComplete","autoFocus","placeholder","name","onChange","value","toLowerCase","App","GlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"8OAEeA,cAAf,w0B,iCCAaC,EAAcC,IAAOC,GAAV,0a,OCaTC,EAZU,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,aAAcC,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,IAAKC,EAAyB,EAAzBA,mBAG1D,OAEI,cAAEP,EAAF,UACI,qBAAKQ,IAAKJ,EAAcK,IAAKH,EAAKI,UAAU,yBAAyBC,QAL3D,kBAAMJ,EAAmBF,S,iBCFzCO,EACG,2BADHA,EAEc,qCAOLC,EAJG,SAACC,GAAD,IAAWC,EAAX,uDAAkB,EAAlB,OAAwBC,IAAMC,IAAN,UAAaL,EAAb,cAAgCE,EAAhC,iBAAiDC,EAAjD,gBAA6DH,EAA7D,yDACrCM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,QAC/BC,OAAM,SAAAC,GAAG,OAAIC,MAAMD,OCPXE,EAAexB,IAAOyB,IAAV,qqBCWVC,EATA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBAEd,OACI,cAACH,EAAD,UACI,wBAAQI,KAAK,SAASlB,QAHb,kBAAMiB,KAG0BlB,UAAU,SAAnD,0BCNCoB,EAAU7B,IAAOyB,IAAV,uU,iBCSLK,G,MARM,WACjB,OACI,mCACI,cAAC,IAAD,CAAQF,KAAK,OAAOG,MAAM,UAAUC,OAAQ,IAAKC,MAAO,IAAKC,QAAS,UCAnE,SAASC,EAAT,GAA0C,IAAD,OAAxBC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,SACxC,EAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAUAC,qBAAU,WAKN,OAJAC,OAAOC,iBAAiB,UAAWC,GACtBC,SAASC,cAAc,QAC/BC,MAAMC,SAAW,SAXD,WACrB,IAAMC,EAAcJ,SAASC,cAAc,iBAC3CN,GAAe,GACXS,IAAaA,EAAYC,OAAS,WAClCV,GAAe,KAQnBW,GACO,WACHT,OAAOU,oBAAoB,UAAWR,GACzBC,SAASC,cAAc,QAC/BC,MAAMC,SAAW,UAE3B,IAIH,IAAMJ,EAAe,SAACS,GAAD,MAAkB,WAAXA,EAAEC,MAAqB,EAAKC,MAAMnB,cAO9D,OACI,cAACP,EAAD,CAASnB,QANU,SAAC,GAA8B,EAA5B8C,SAA4B,EAApBC,eACFrB,KAK5B,SACI,qBAAK3B,UAAU,QAAf,SACK8B,EAAc,cAACmB,EAAD,IAAmBrB,MCvC3C,I,EAAMsB,EAAmB3D,IAAO4D,GAAV,4RCQd,SAASC,EAAT,GAAuC,IAAfC,EAAc,EAAdA,WACnC,EAAwBxB,mBAAS,GAAjC,mBAAOxB,EAAP,KAAaiD,EAAb,KACA,EAAkCzB,mBAAS,IAA3C,mBAAO0B,EAAP,KAAkBC,EAAlB,KACA,EAAsC3B,oBAAS,GAA/C,mBAAO4B,EAAP,KAAoBC,EAApB,KACA,EAAsC7B,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAkCF,mBAAS,IAA3C,mBAAO8B,EAAP,KAAkBC,EAAlB,KAGMC,EAAmB,uCAAG,WAAOR,EAAYhD,GAAnB,eAAAyD,EAAA,6DACxBJ,GAAe,GACf3B,GAAe,GAFS,kBAIGgC,EAAIV,EAAYhD,GAJnB,YAIdI,EAJc,QAKPuD,OALO,iBAMhBR,GAAa,SAACS,GAAD,OACTA,EAAa,sBAAOA,GAAP,YAAyBxD,IAAYA,KAEtC,KAAf4C,GAXea,IAAMC,QAAQ,iIAEd,iDADFD,IAAME,MAAM,8LACV,0DAcpBtD,MAAM,EAAD,IAde,yBAgBpB4C,GAAe,GACf3B,GAAe,GACN,IAAT1B,GAAc4B,OAAOoC,SAAS,CAC1BC,IAAKlC,SAASmC,gBAAgBC,aAC9BC,SAAU,WApBM,6EAAH,wDA0BzBzC,qBAAU,WACN,GAAmB,KAAfqB,EAIA,OAAO,EAHPG,EAAa,IACbK,EAAoBR,EAAYhD,KAIrC,CAACgD,IACJrB,qBAAU,WACO,IAAT3B,GAAYwD,EAAoBR,EAAYhD,KACjD,CAACA,IAEJ,IAIMR,EAAqB,SAAC6E,GACxBhB,GAAe,GACfE,EAAac,IAGjB,OACI,qCACI,cAACxB,EAAD,UACKK,GACGA,EAAUoB,KAAI,YAA+C,IAA5CC,EAA2C,EAA3CA,GAAIlF,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,cAAeC,EAAU,EAAVA,IAC9C,OACI,cAAC,EAAD,CAEIgF,GAAIA,EACJhF,IAAKA,EACLF,aAAcA,EACdC,cAAeA,EACfE,mBAAoBA,GALf+E,WAUvB,OAACrB,QAAD,IAACA,OAAD,EAACA,EAAWS,SAAU,cAAC,EAAD,CAAQ9C,iBAlBf,kBAAMoC,GAAQ,SAACuB,GAAD,OAAcA,EAAW,QAmBvDpB,GACG,cAAC/B,EAAD,CAAOC,WA5BA,WACf+B,GAAe,GACfE,EAAa,KA0BL,SACK9B,EACG,cAACmB,EAAD,IAEA,qBACInD,IAAK6D,EACLnC,MAAM,OACND,OAAO,MACPxB,IAAI,YACJC,UAAU,sBC3F/B,IAAM8E,EAAmBvF,IAAOwF,OAAV,qgDCId,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAChC,EAA8CpD,mBAAS,IAAvD,mBAAOqD,EAAP,KAAwBC,EAAxB,KAsBA,OACI,cAACL,EAAD,UACI,uBAAM9E,UAAU,aAAaiF,SAhBhB,SAAAG,GACjBA,EAAMC,iBAGyB,KAA3BH,EAAgBI,OAAgBJ,EAAgBlB,OAD/BE,IAAMqB,KAAK,sSAMhCN,EAASC,GACTC,EAAmB,MAMf,UACI,wBAAQhE,KAAK,SAASnB,UAAU,oBAAhC,SACI,sBAAMA,UAAU,0BAAhB,sBAGJ,uBACIA,UAAU,mBACVmB,KAAK,OACLqE,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,KAAK,kBACLC,SAjCc,SAAAR,GAC1BD,EAAmBC,EAAMpC,cAAc6C,MAAMC,uBCHtC,SAASC,IACtB,MAA8ClE,mBAAS,IAAvD,mBAAOqD,EAAP,KAAwBC,EAAxB,KAQA,OACE,qCACE,cAACa,EAAD,IACA,cAAChB,EAAD,CAAWC,SARU,SAAAC,GACvBC,EAAmBD,MAQjB,cAAC9B,EAAD,CAAcC,WAAY6B,IAC1B,cAAC,IAAD,OClBNe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACJ,EAAD,MAEF3D,SAASgE,eAAe,W","file":"static/js/main.d1b1f5ac.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n  width: 100vw;\r\n  /* overflow-x: hidden; */\r\n}\r\n\r\n*,\r\n*::after,\r\n*::before {\r\n  box-sizing: inherit;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  font-family: -apple - system, BlinkMacSystemFont, 'Segoe UI', Roboto,\r\n    Oxygen - Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans - serif;\r\n  color: #212121;\r\n  background-color: #fff;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\nh1,\r\nh2,\r\nh3,\r\np {\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n}\r\n\r\nul,\r\nol {\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding-left: 0;\r\n  list-style: none;\r\n}\r\n\r\nimg {\r\n  display: block;\r\n  max-width: 100%;\r\n  height: auto;\r\n\r\n}\r\n\r\n.list {\r\n  list-style: none;\r\n}\r\n\r\n\r\n.App {\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 16px;\r\n  padding-bottom: 24px;\r\n}\r\n\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const GalleryItem = styled.li`\r\n\r\n   border-radius: 2px;\r\n   box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n\r\n\r\n.ImageGalleryItem-image {\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n\r\n.ImageGalleryItem-image:hover {\r\n  transform: scale(1.03);\r\n  cursor: zoom-in;\r\n}\r\n\r\n\r\n`;","import { GalleryItem } from \"./GalleryItemStyled\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ webformatURL, largeImageURL, tag, openModalWithImage }) => {\r\n    const openImage = () => openModalWithImage(largeImageURL);\r\n\r\n    return (\r\n\r\n        < GalleryItem>\r\n            <img src={webformatURL} alt={tag} className=\"ImageGalleryItem-image\" onClick={openImage} />\r\n        </ GalleryItem>\r\n\r\n    );\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n\r\n\r\nImageGalleryItem.propTypes = {\r\n    openModalWithImage: PropTypes.func,\r\n    tag: PropTypes.string,\r\n    largeImageURL: PropTypes.string,\r\n    webformatURL: PropTypes.string,\r\n\r\n}","import axios from \"axios\";\r\n\r\nconst configUrl = {\r\n    url: 'https://pixabay.com/api/',\r\n    keyUserPixabay: '22753244-01291854404e32317fab358dd',\r\n}\r\n\r\nconst getImages = (nextName, page = 1) => axios.get(`${configUrl.url}?q=${nextName}&page=${page}&key=${configUrl.keyUserPixabay}&image_type=photo&orientation=horizontal&per_page=12`)\r\n    .then(response => response.data.hits)\r\n    .catch(err => alert(err))\r\n\r\nexport default getImages","import styled from \"styled-components\";\r\n\r\nexport const ButtonLoader = styled.div`\r\n  margin: 15px auto;\r\n  text-align: center;\r\n\r\n\r\n.Button {\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n}\r\n\r\n.Button:hover,\r\n.Button:focus {\r\n  background-color: #303f9f;\r\n}\r\n`;","import { ButtonLoader } from \"./ButtonStyled\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Button = ({ onHandleLoadMore }) => {\r\n    const loadMore = () => onHandleLoadMore()\r\n    return (\r\n        <ButtonLoader>\r\n            <button type=\"button\" onClick={loadMore} className=\"Button\">Load more</button>\r\n        </ButtonLoader>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n    onHandleLoadMore: PropTypes.func,\r\n}","import styled from \"styled-components\";\r\n\r\nexport const Overlay = styled.div`\r\n\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n  \r\n\r\n\r\n.modal {\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n}\r\n`;","import Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst LoaderSpiner = () => {\r\n    return (\r\n        <>\r\n            <Loader type=\"Puff\" color=\"#51ff00\" height={300} width={300} timeout={5000} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoaderSpiner;\r\n\r\n","import { useState, useEffect } from \"react\";\r\nimport { Overlay } from \"./ModalStyled\";\r\nimport PropTypes from 'prop-types';\r\nimport LoaderSpiner from \"../Loader/Loader\";\r\n\r\n\r\nexport default function Modal({ closeModal, children }) {\r\n    const [onLoadImage, setOnLoadImage] = useState(false);\r\n\r\n    const showLoaderForSrc = () => {\r\n        const imageIsLoad = document.querySelector(\".imageInModal\");\r\n        setOnLoadImage(true);\r\n        if (imageIsLoad) imageIsLoad.onload = function () {\r\n            setOnLoadImage(false);\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"keydown\", handleEscape);\r\n        const body = document.querySelector(\"body\");\r\n        body.style.overflow = \"hidden\";\r\n        showLoaderForSrc();\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", handleEscape);\r\n            const body = document.querySelector(\"body\");\r\n            body.style.overflow = \"auto\";\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    const handleEscape = (e) => e.code === \"Escape\" && this.props.closeModal();\r\n\r\n    const onOverlayClick = ({ target, currentTarget }) => {\r\n        target === currentTarget && closeModal();\r\n    };\r\n\r\n\r\n    return (\r\n        <Overlay onClick={onOverlayClick}>\r\n            <div className='modal'>\r\n                {onLoadImage ? <LoaderSpiner /> : children}\r\n            </div>\r\n        </Overlay>\r\n    );\r\n\r\n}\r\n\r\n\r\nModal.propTypes = {\r\n    children: PropTypes.object,\r\n}","import styled from \"styled-components\";\r\n\r\nexport const ImageGalleryList = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;","import { useState, useEffect } from \"react\";\r\nimport ImageGalleryItem from \"./ImageGalleryItem/ImageGalleryItem\";\r\nimport { toast } from \"react-toastify\";\r\nimport Api from \"../../utils/Api\";\r\nimport Button from \"../Button/Button\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport LoaderSpiner from \"../Loader/Loader\";\r\nimport { ImageGalleryList } from \"./ImageGalleryStyled\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nexport default function ImageGallery({ nameSearch }) {\r\n    const [page, setPage] = useState(1);\r\n    const [imageData, setImageData] = useState([]);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [onLoadImage, setOnLoadImage] = useState(false);\r\n    const [imagePath, setImagePath] = useState(\"\");\r\n    const notifySuccess = () => toast.success(\"Поиск успешно выполнен!!!\");\r\n    const notifyError = () => toast.error(\"По вашему запросу ничего не найдено\");\r\n    const getListImageGallery = async (nameSearch, page) => {\r\n        setIsModalOpen(true);\r\n        setOnLoadImage(true);\r\n        try {\r\n            const response = await Api(nameSearch, page);\r\n            if (response.length) {\r\n                setImageData((prevImageData) =>\r\n                    prevImageData ? [...prevImageData, ...response] : response\r\n                );\r\n                (nameSearch !== '') && notifySuccess();\r\n            } else {\r\n                return notifyError();\r\n            }\r\n        } catch (error) {\r\n            alert(error);\r\n        } finally {\r\n            setIsModalOpen(false);\r\n            setOnLoadImage(false);\r\n            page !== 1 && window.scrollTo({\r\n                top: document.documentElement.scrollHeight,\r\n                behavior: \"smooth\",\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (nameSearch !== \"\") {\r\n            setImageData([])\r\n            getListImageGallery(nameSearch, page);\r\n        } else {\r\n            return false;\r\n        }\r\n    }, [nameSearch]); // eslint-disable-line react-hooks/exhaustive-deps\r\n    useEffect(() => {\r\n        if (page !== 1) getListImageGallery(nameSearch, page);\r\n    }, [page]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    const closeModal = () => {\r\n        setIsModalOpen(false);\r\n        setImagePath(\"\");\r\n    };\r\n    const openModalWithImage = (path) => {\r\n        setIsModalOpen(true);\r\n        setImagePath(path);\r\n    };\r\n    const onHandleLoadMore = () => setPage((prevPage) => prevPage + 1);\r\n    return (\r\n        <>\r\n            <ImageGalleryList>\r\n                {imageData &&\r\n                    imageData.map(({ id, webformatURL, largeImageURL, tag }) => {\r\n                        return (\r\n                            <ImageGalleryItem\r\n                                key={id}\r\n                                id={id}\r\n                                tag={tag}\r\n                                webformatURL={webformatURL}\r\n                                largeImageURL={largeImageURL}\r\n                                openModalWithImage={openModalWithImage}\r\n                            />\r\n                        );\r\n                    })}\r\n            </ImageGalleryList>\r\n            {!!imageData?.length && <Button onHandleLoadMore={onHandleLoadMore} />}\r\n            {isModalOpen && (\r\n                <Modal closeModal={closeModal}>\r\n                    {onLoadImage ? (\r\n                        <LoaderSpiner />\r\n                    ) : (\r\n                        <img\r\n                            src={imagePath}\r\n                            width=\"1000\"\r\n                            height=\"800\"\r\n                            alt=\"ItisPhoto\"\r\n                            className=\"imageInModal\"\r\n                        />\r\n                    )}\r\n                </Modal>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const SearchbarWrapper = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n\r\n    .SearchForm {\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n}\r\n\r\n.SearchForm-button {\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n}\r\n\r\n.SearchForm-button:hover {\r\n  opacity: 1;\r\n}\r\n\r\n.SearchForm-button-label {\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n}\r\n\r\n.SearchForm-input {\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n}\r\n\r\n.SearchForm-input::placeholder {\r\n  font: inherit;\r\n  font-size: 18px;\r\n}\r\n\r\n\r\n`;","import { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { SearchbarWrapper } from './SearchbarStyled';\r\n\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n    const [imageNameSearch, setImageNameSearch] = useState('');\r\n\r\n\r\n    const handleImageNameChange = event => {\r\n        setImageNameSearch(event.currentTarget.value.toLowerCase())\r\n    }\r\n\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const notify = () => toast.warn('Для нового поиска изображения необходимо ввести слово!');\r\n        if (imageNameSearch.trim() === '' & imageNameSearch.length) {\r\n            notify();\r\n            return;\r\n        }\r\n\r\n        onSubmit(imageNameSearch);\r\n        setImageNameSearch('');\r\n    }\r\n\r\n\r\n    return (\r\n        <SearchbarWrapper>\r\n            <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n                <button type=\"submit\" className=\"SearchForm-button\">\r\n                    <span className=\"SearchForm-button-label\">Search</span>\r\n                </button>\r\n\r\n                <input\r\n                    className=\"SearchForm-input\"\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                    name=\"imageNameSearch\"\r\n                    onChange={handleImageNameChange}\r\n                />\r\n            </form>\r\n        </SearchbarWrapper>\r\n    );\r\n}\r\n\r\n","import { useState } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport GlobalStyles from \"../src/style/GlobalStyle\";\r\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\r\nimport Searchbar from './Components/Seachbar/Searchbar';\r\n\r\n\r\nexport default function App() {\r\n  const [imageNameSearch, setImageNameSearch] = useState('');\r\n\r\n\r\n  const handleFormSubmit = imageNameSearch => {\r\n    setImageNameSearch(imageNameSearch);\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      <Searchbar onSubmit={handleFormSubmit} />\r\n      <ImageGallery nameSearch={imageNameSearch} />\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}